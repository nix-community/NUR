name: "Test"
on:
  pull_request:
  merge_group:
  # For bors
  push:
    branches:
     - staging
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: 2

    - uses: cachix/install-nix-action@17fe5fb4a23ad6cbbe47d6b3f359611ad276644c # v31
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes

    - name: Find added repos
      id: detect-repo
      run: |
        set -eux

        if [ -n "${{ github.base_ref }}" ]; then
          BASE_REF="origin/${{ github.base_ref }}"
        else
          BASE_REF="HEAD^"
        fi

        changed_files=$(git diff --name-only "$BASE_REF" HEAD)
        if [ "$changed_files" != "repos.json" ]; then
          echo "single_repo_added=false" >> "$GITHUB_OUTPUT"
          exit 0
        fi

        old=$(git show "$BASE_REF:repos.json" | jq -r '.repos | keys[]')
        new=$(jq -r '.repos | keys[]' repos.json)
        added_repos=$(comm -13 <(echo "$old" | sort) <(echo "$new" | sort))
        count=$(echo "$added_repos" | wc -l)
        if [ "$count" -eq 1 ]; then
          echo "single_repo_added=true" >> "$GITHUB_OUTPUT"
          echo "repo=$(echo "$added_repos")" >> "$GITHUB_OUTPUT"
        else
          echo "single_repo_added=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Test (Single repo)
      if: steps.detect-repo.outputs.single_repo_added == 'true'
      run: ./ci/test.sh -r ${{ steps.detect-repo.outputs.repo }}

    - name: Test (all repos)
      if: steps.detect-repo.outputs.single_repo_added != 'true'
      run: ./ci/test.sh
